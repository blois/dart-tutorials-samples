import "dart:async" as pB;import "dart:collection" as gB;import "dart:isolate" as pC;import "dart:html" as w;class dC{static const  eC="Chrome";final  ZC;final  minimumVersion;const dC(this.ZC,[this.minimumVersion]);}class fC{final  name;const fC(this.name);}final SB=new l();var TB='00:00'; get hB{if(BC){CC(SB,s.VB,'counter');}return TB;}set hB( g){if(AC(SB)){DC(SB,s.VB,'counter',TB,g);}TB=g;}var LB=new Stopwatch();var MB;var UB;var EB; qB(){UB=w.query("#startbutton");MB=w.query("#stopbutton");MB.disabled=true;EB=w.query("#resetbutton");EB.disabled=true;} rB(){LB.start();var g=new Duration(seconds:1);new pB.Timer.periodic(g,uB);UB.disabled=true;MB.disabled=false;EB.disabled=true;} sB(){LB.stop();UB.disabled=false;EB.disabled=false;MB.disabled=true;} tB(){LB.reset();hB='00:00';EB.disabled=true;} uB( tC){var g=LB.elapsedMilliseconds~/1000;var h=0;if(g>=60){h=g~/60;g=g%60;}var i=(h<=9)?'0${h}':'${h}';var j=(g<=9)?'0${g}':'${g}';hB='${i}:${j}';} vB(){var uC=w.document.body;var vC,wC,xC,yC;var zC=new jC(uC);vC=uC.nodes[3].nodes[1];var AD=zC.bC(()=>hB,false);vC.nodes.addAll([new w.Text('\n      '),AD,new w.Text('\n      ')]);wC=uC.nodes[3].nodes[3].nodes[1];zC.listen(wC.onClick,(g){rB();});xC=uC.nodes[3].nodes[3].nodes[3];zC.listen(xC.onClick,(g){sB();});yC=uC.nodes[3].nodes[3].nodes[5];zC.listen(yC.onClick,(g){tB();});zC.cB();zC.insert();}main(){lB=true;qB();vB();}typedef  q( e);typedef  wB( changes);typedef  AB();typedef  xB();class NB{final oldValue;final newValue;final  changes;NB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is NB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>NC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class s{static const VB=1;static const WB=2;static const iB=WB|4;static const jB=WB|8;final  type;final key;final oldValue;final newValue;s(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is s&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>OC(type,key,oldValue,newValue); toString(){var g;switch (type){case VB:g='field';break;case WB:g='index';break;case iB:g='insert';break;case jB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} yB(g, i,[ k]){if(g is l){var h=g;return XB(h,(p){i(new NB(h,h,p));});}var j=new OB(g,i,k);if(!j.BD()){return EC;}return j.CD;} XB( g, i){if(g.DB==null)g.DB=new YB();var h=g.DB.add(i);return h.remove;}class l{var DB;var CB;final  hashCode= ++l.zB;static var zB=0;} AC( g)=>g.DB!=null&&g.DB.head!=null; get BC=>BB!=null; CC( g, h,i)=>BB.DD(g,h,i); DC( g, j,k, h, i){if((j&(s.iB|s.jB))==0){if(h==i)return;}if(t==null){t=[] ;PC(FC);}if(g.CB==null){g.CB=[] ;t.add(g);}g.CB.add(new s(j,k,h,i));} EC(){}var BB;var kB=100;var t;var u; FC(){var p=0;while (t!=null||u!=null){var j=t;t=null;var i=u;u=null;if(p++ ==kB){GC(j,i);return;}if(j!=null){for(var h in j){var KB=h.CB;h.CB=null;for(var g=h.DB.head;g!=null;g=g.next){var k=g.value;try {k(KB);}catch (fB,v){FB(fB,v,k,'from ${h}');}}}}if(i!=null){i.forEach((oC,eB){eB.ED();});}}} GC( k, j){var g=[] ;if(k!=null){for(var i in k){var KB=i.CB;g.add('${i} ${KB}');}}if(j!=null){for(var p in j.values){var h=p.ED();if(h!=null)g.add('${p} ${h}');}}t=null;u=null;var v='exceeded notifiction limit of ${kB}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';JC(v);}class OB{static var HC=0;final  FD= ++OB.HC;final  GD;final  HD;final  ID;final  JD=new Map();final  KD=[] ;var LD=false;var MD;OB(this.GD,this.HD,this.ID); toString()=>ID!=null?'<observer ${FD}: ${ID}>':'<observer ${FD}>'; BD(){var h=BB;BB=this;try {MD=GD();if(MD is Iterable&&MD is !List&&MD is !l){MD=(MD as Iterable).toList();}}catch (g,i){FB(g,i,GD,'from ${this}');MD=null;}JD.forEach(ND);JD.clear();assert(BB==this);BB=h;OD();return KD.length>0;} PD( i){try {HD(i);}catch (g,h){FB(g,h,HD,'from ${this}');}} OD(){var g=MD;if(g is !l)return;KD.add(XB(g,(h){PD(new NB(g,g,h));}));} DD( p, v,g){var i=JD.putIfAbsent(p,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|v;}catch (j,k){FB(j,k,g,'hashCode or operator == from ${this}');}} ND( i, j){KD.add(XB(i,(k){if(LD)return;for(var g in k){var h=j[g.key];if(h!=null&&(h&g.type)!=0){LD=true;if(u==null){u=new gB.SplayTreeMap();}u[FD]=this;return;}}}));} CD(){for(var g in KD){g();}LD=false;} ED(){if(!LD)return null;var g=MD;CD();BD();try {if(g==MD)return null;}catch (i,j){FB(i,j,g,'operator == from ${this}');return null;}var h=new NB(g,MD);PD(h);return h;}}typedef  IC( message);var JC=(g)=>print(g);typedef  KC(error,stackTrace,obj, message);var FB=LC; LC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class MC{MC();}class n<o>{var QD;var RD;var SD;var TD;n.qC( g,this.SD):TD=g{if(SD!=null)SD.UD++ ;} get next=>RD; get value=>TD;set value( g)=>TD=g; VD( g, h){RD=h;QD=g;if(g!=null)g.RD=this;if(h!=null)h.QD=this;return this;} append( g)=>new n<o>.qC(g,SD).VD(this,RD); remove(){if(SD==null)return;SD.UD-- ;if(QD!=null){QD.RD=RD;}else{SD.WD=RD;}if(RD!=null){RD.QD=QD;}else{SD.XD=QD;}RD=null;QD=null;SD=null;}}class YB<o> extends gB.IterableBase<o>{var WD;var XD; get length=>UD;var UD=0;YB(){} get head=>WD; add( h){var g=new n<o>.qC(h,this);if(XD==null)return WD=XD=g;return XD=g.VD(XD,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new gC<o>(this);}class gC<o> implements Iterator<o>{var YD;var SD;var ZD;var aD=-1;gC(this.SD){YD=new List<n>(SD.length);var h=0;var g=SD.head;while (g!=null){YD[h++ ]=g;g=g.next;}} get current=>ZD; moveNext(){do{aD++ ;}while(aD<YD.length&&YD[aD].SD!=SD);if(aD<YD.length){ZD=YD[aD].value;return true;}else{ZD=null;return false;}}}GB(h,g)=>h.hashCode*31+g.hashCode;NC(h,g,i)=>GB(GB(h,g),i);OC(g,i,h,j)=>GB(GB(g,i),GB(h,j)); PC( h()){var g=new pC.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);} QC(i, g,[ h]){var j=i is MC;if(h==null){h=i.toString();}if(!j&&g is w.Text){g.text=h;}else{var k=g;g=j?new w.Element.html(h):new w.Text(h);k.replaceWith(g);}return g;}abstract class PB{ cB(){} insert(); remove();}class hC extends PB{final  oB;var bD;final  listener;hC(this.oB,this.listener); insert(){bD=oB.listen(listener);} remove(){bD.cancel();bD=null;}}class iC extends PB{final exp;final  action;final  isFinal;var RB;iC(this.exp,this.action,this.isFinal); insert(){if(isFinal){action(new NB(null,exp()));}else if(RB!=null){throw new StateError('binding already attached');}else{RB=TC(exp,action,'generic-binding');}} remove(){if(!isFinal){RB();RB=null;}}}class jC extends PB{final  cC;final  children=[] ;final  nodes=[] ;jC(this.cC); listen( i, h){children.add(new hC(i,(g){h(g);UC();}));} bC( h,i){var g=new w.Text('');children.add(new iC(()=>'${h()}',(j){g=QC(h(),g,j.newValue);},i));return g;} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); cB(){for(var g=0,h=children.length;g<h;g++ ){children[g].cB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}var lB=false; RC(g, p,[ k]){if(lB)return yB(g,p);if(p==null)return (){};if(HB==null)HB=new YB<IB>();var i;var h=m.YC;if(g is nB){i=(g as nB).cD;}else if(g is Function){i=g;try {var j=g();if(j is List){h=m.JB;}else if(j is Iterable){h=m.JB;i=()=>g().toList();}else if((j is gB.LinkedHashMap)||(j is gB.SplayTreeMap)){h=m.bB;}else if(j is Map){h=m.aB;}}catch (KB,eB){print('error: evaluating ${k!=null?k:"<unnamed>"} ' 'watcher threw error (${KB}, ${eB})');}}else if(g is List){i=()=>g;h=m.JB;}else if(g is Iterable){i=()=>g.toList();h=m.JB;}else if((g is gB.LinkedHashMap)||(g is gB.SplayTreeMap)){i=()=>g;h=m.bB;}else if(g is Map){i=()=>g;h=m.aB;}var v=SC(h,i,p,k);var fB=HB.add(v);return fB.remove;} SC( j, g, i, h){switch (j){case m.JB:return new kC(g,i,h);case m.bB:return new mC(g,i,h);case m.aB:return new lC(g,i,h);default:return new IB(g,i,h);}} TC(h,i,[j]){var k=RC(h,i,j);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new NB(null,g));return k;}var HB;class IB{final  dB;final  cD;final  dD;var eD;IB(this.cD,this.dD,this.dB){eD=cD();} toString()=>dB==null?'<unnamed>':dB; aC(){var g=fD();if(gD(g)){var h=eD;hD(g);dD(new NB(h,g));return true;}return false;} gD(g)=>eD!=g; hD(g){eD=g;}fD(){try {return cD();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return eD;}}final  mB=10; UC(){if(HB==null)return;var g;var h=0;do{g=false;for(var i in HB){if(i.aC()){g=true;}}}while(g&& ++h<mB);if(h==mB){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  VC<WC>();class nB<WC>{nB();}class kC<WC> extends IB{kC(g, i, h):super(g,i,h){hD(fD());} gD( g){return ZB(eD,g);} hD(g){eD=new List<WC>.from(g);}}class lC<QB,XC> extends IB{lC(g, i, h):super(g,i,h){hD(fD());} gD( g){var i=eD.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(eD[h]!=g[h])return true;}return false;} hD(g){eD=new Map<QB,XC>.from(g);}}class mC<QB,XC> extends IB{mC(g, i, h):super(g,i,h){hD(fD());} gD( g){return ZB(g.keys,eD.keys)||ZB(g.values,eD.values);} hD(g){eD=new gB.LinkedHashMap.from(g);}} ZB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class m{final iD;const m.rC(this.iD);toString()=>'Enum.${iD}';static const JB=const m.rC('LIST');static const aB=const m.rC('HASH_MAP');static const bB=const m.rC('ORDERED_MAP');static const YC=const m.rC('OTHER');}//@ sourceMappingURL=stopwatch.html_bootstrap.dart.map
