import "dart:async" as MB;import "dart:collection" as aB;import "dart:html" as k;class uC{static const  vC="Chrome";static const  wC="Firefox";static const  xC="Internet Explorer";static const  yC="Safari";final  fC;final  minimumVersion;const uC(this.fC,[this.minimumVersion]);}class zC{final  name;const zC(this.name);}main(){eB=false;pB();qB();}class AD extends iB{var LD;static final oB=new k.DocumentFragment.html('''
      <div class="x-converter">
        <span> <content select=".label-one"></content> </span>
        <input type="text" style="text-align:right">
          &lt; &gt;
        <input type="text">
        <span> <content select=".label-two"></content> </span>
      </div>
    ''');var MD,ND;var OD; lC(){var PD=createShadowRoot("x-converter");sC("x-converter",new XB({"x-converter":"[is=\"x-converter\"]"}));LD=mC("x-converter");OD=new DC(PD);PD.nodes.add(oB.clone(true));MD=PD.nodes[1].nodes[3];OD.listen(MD.onChange,(h){iC();});OD.listen(MD.onInput,(h){IB=MD.value;});OD.EB(()=>IB,(g){if(MD.value!=g)MD.value=g;},false,false);ND=PD.nodes[1].nodes[5];OD.listen(ND.onChange,(h){jC();});OD.listen(ND.onInput,(h){JB=ND.value;});OD.EB(()=>JB,(g){if(ND.value!=g)ND.value=g;},false,false);OD.DB();} oC(){OD.insert();} rC(){OD.remove();OD=MD=ND=null;}var ratio=0.5;var IB='0';var JB='0'; iC(){var g=double.parse(IB);var h=g/ratio;JB=h.toStringAsFixed(2);} jC(){var h=double.parse(JB);var g=h*ratio;IB=g.toStringAsFixed(2);}} pB(){} qB(){var QD=k.document.body;var RD,SD,TD;var UD=new DC(QD);RD=QD.nodes[1].nodes[1];UD.EB(()=>0.62,(g){if(RD.xtag.ratio!=g)RD.xtag.ratio=g;},false,false);UD.s(new AD()..host=RD);SD=QD.nodes[1].nodes[3];UD.EB(()=>2.2,(g){if(SD.xtag.ratio!=g)SD.xtag.ratio=g;},false,false);UD.s(new AD()..host=SD);TD=QD.nodes[1].nodes[5];UD.EB(()=>17.06,(g){if(TD.xtag.ratio!=g)TD.xtag.ratio=g;},false,false);UD.s(new AD()..host=TD);UD.DB();UD.insert();}typedef  q( e);typedef  rB( changes);typedef  u();typedef  sB();class NB{final oldValue;final newValue;final  changes;NB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is NB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>zB(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class bB{bB();} tB(g, i,[ l]){if(g is t){var h=g;return OB(h,(p){i(new NB(h,h,p));});}var j=new QB(g,i,l);if(!j.VD()){return uB;}return j.WD;} OB( g, i){if(g.kB==null)g.kB=new RB();var h=g.kB.add(i);return h.remove;}class t{} uB(){}var FB;var PB;class QB{static var vB=0;final  XD= ++QB.vB;final  YD;final  ZD;final  aD;final  bD=new Map();final  cD=[] ;var dD=false;var eD;QB(this.YD,this.ZD,this.aD); toString()=>aD!=null?'<observer ${XD}: ${aD}>':'<observer ${XD}>'; VD(){var h=FB;FB=this;try {eD=YD();if(eD is Iterable&&eD is !List&&eD is !t){eD=(eD as Iterable).toList();}}catch (g,i){cB(g,i,YD,'from ${this}');eD=null;}bD.forEach(fD);bD.clear();assert(FB==this);FB=h;gD();return cD.length>0;} hD( i){try {ZD(i);}catch (g,h){cB(g,h,ZD,'from ${this}');}} gD(){var g=eD;if(g is !t)return;cD.add(OB(g,(h){hD(new NB(g,g,h));}));} fD( i, j){cD.add(OB(i,(l){if(dD)return;for(var g in l){var h=j[g.key];if(h!=null&&(h&g.type)!=0){dD=true;if(PB==null){PB=new aB.SplayTreeMap();}PB[XD]=this;return;}}}));} WD(){for(var g in cD){g();}dD=false;}}typedef  wB(error,stackTrace,obj, message);var cB=xB; xB(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class yB{yB();}class n<o>{var iD;var jD;var kD;var lD;n.JD( g,this.kD):lD=g{if(kD!=null)kD.mD++ ;} get next=>jD; get value=>lD;set value( g)=>lD=g; nD( g, h){jD=h;iD=g;if(g!=null)g.jD=this;if(h!=null)h.iD=this;return this;} append( g)=>new n<o>.JD(g,kD).nD(this,jD); remove(){if(kD==null)return;kD.mD-- ;if(iD!=null){iD.jD=jD;}else{kD.oD=jD;}if(jD!=null){jD.iD=iD;}else{kD.pD=iD;}jD=null;iD=null;kD=null;}}class RB<o> extends aB.IterableBase<o>{var oD;var pD; get length=>mD;var mD=0;RB(){} get head=>oD; add( h){var g=new n<o>.JD(h,this);if(pD==null)return oD=pD=g;return pD=g.nD(pD,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new BD<o>(this);}class BD<o> implements Iterator<o>{var qD;var kD;var rD;var sD=-1;BD(this.kD){qD=new List<n>(kD.length);var h=0;var g=kD.head;while (g!=null){qD[h++ ]=g;g=g.next;}} get current=>rD; moveNext(){do{sD++ ;}while(sD<qD.length&&qD[sD].kD!=kD);if(sD<qD.length){rD=qD[sD].value;return true;}else{rD=null;return false;}}}dB(h,g)=>h.hashCode*31+g.hashCode;zB(h,g,i)=>dB(dB(h,g),i); AC(g){if(g is yB)return g.toString();g=g.toString();return CC(g)?g:'#';}const BC=const["http","https","ftp","mailto"]; CC( h){var g=Uri.parse(h).scheme;if(g=='')return true;return BC.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class w{ DB(){} insert(); remove();}class CD extends w{final  lB;var tD;final  listener;CD(this.lB,this.listener); insert(){tD=lB.listen(listener);} remove(){tD.cancel();tD=null;}}class DD extends w{final  nB;final  ZB;final  mB;final  isFinal;var HB;DD(this.ZB,this.nB,this.mB,this.isFinal); uD(g){nB(mB?AC(g):g);} insert(){if(isFinal){uD(ZB());}else if(HB!=null){throw new StateError('data binding already attached.');}else{HB=GC(ZB,(g)=>uD(g.newValue),'dom-property-binding');}} remove(){if(!isFinal){HB();HB=null;}}}class ED extends w{final s;ED(this.s); DB(){s..lC()..kC()..hC();} insert(){s..nC()..oC();} remove(){s..rC()..qC();}}class DC extends w{final  pC;final  children=[] ;final  nodes=[] ;DC(this.pC); listen( i, h){children.add(new CD(i,(g){h(g);HC();}));} EB(g,j,h,[i=false]){children.add(new DD(g,j,i,h));} s( g){children.add(new ED(g));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); DB(){for(var g=0,h=children.length;g<h;g++ ){children[g].DB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}var eB=false; EC(g, p,[ l]){if(eB)return tB(g,p);if(p==null)return (){};if(AB==null)AB=new RB<BB>();var i;var h=m.LC;if(g is hB){i=(g as hB).vD;}else if(g is Function){i=g;try {var j=g();if(j is List){h=m.CB;}else if(j is Iterable){h=m.CB;i=()=>g().toList();}else if((j is aB.LinkedHashMap)||(j is aB.SplayTreeMap)){h=m.UB;}else if(j is Map){h=m.TB;}}catch (KB,tC){print('error: evaluating ${l!=null?l:"<unnamed>"} ' 'watcher threw error (${KB}, ${tC})');}}else if(g is List){i=()=>g;h=m.CB;}else if(g is Iterable){i=()=>g.toList();h=m.CB;}else if((g is aB.LinkedHashMap)||(g is aB.SplayTreeMap)){i=()=>g;h=m.UB;}else if(g is Map){i=()=>g;h=m.TB;}var v=FC(h,i,p,l);var LB=AB.add(v);return LB.remove;} FC( j, g, i, h){switch (j){case m.CB:return new FD(g,i,h);case m.UB:return new HD(g,i,h);case m.TB:return new GD(g,i,h);default:return new BB(g,i,h);}} GC(h,i,[j]){var l=EC(h,i,j);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new NB(null,g));return l;}var AB;class BB{final  YB;final  vD;final  wD;var xD;BB(this.vD,this.wD,this.YB){xD=vD();} toString()=>YB==null?'<unnamed>':YB; gC(){var g=yD();if(zD(g)){var h=xD;AE(g);wD(new NB(h,g));return true;}return false;} zD(g)=>xD!=g; AE(g){xD=g;}yD(){try {return vD();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return xD;}}final  fB=10; HC(){if(AB==null)return;var g;var h=0;do{g=false;for(var i in AB){if(i.gC()){g=true;}}}while(g&& ++h<fB);if(h==fB){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  gB<IC>();typedef  JC<IC>( value);class hB<IC>{hB();}class FD<IC> extends BB{FD(g, i, h):super(g,i,h){AE(yD());} zD( g){return SB(xD,g);} AE(g){xD=new List<IC>.from(g);}}class GD<GB,KC> extends BB{GD(g, i, h):super(g,i,h){AE(yD());} zD( g){var i=xD.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(xD[h]!=g[h])return true;}return false;} AE(g){xD=new Map<GB,KC>.from(g);}}class HD<GB,KC> extends BB{HD(g, i, h):super(g,i,h){AE(yD());} zD( g){return SB(g.keys,xD.keys)||SB(g.values,xD.values);} AE(g){xD=new aB.LinkedHashMap.from(g);}} SB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class m{final BE;const m.KD(this.BE);toString()=>'Enum.${BE}';static const CB=const m.KD('LIST');static const TB=const m.KD('HASH_MAP');static const UB=const m.KD('ORDERED_MAP');static const LC=const m.KD('OTHER');}abstract class iB implements k.Element{var CE;var DE;var EE={};var FE=new XB({}); mC( g)=>FE; sC( h,var g){FE=g;} get host{if(CE==null)throw new StateError('host element has not been set.');return CE;}set host( g){if(g==null){throw new ArgumentError('host must not be null.');}var h=g.xtag;if(h!=null&&h!=g){throw new ArgumentError('host must not have its xtag property set.');}if(CE!=null){throw new StateError('host can only be set once.');}g.xtag=this;CE=g;}createShadowRoot([ g]){var h=GE();if(g!=null){EE[g]=h;}return h;}GE(){if(jB){return host.createShadowRoot();}if(DE==null)DE=[] ;DE.add(new k.DivElement());return DE.last;} kC(){} nC(){} qC(){} hC(){if(jB)return;if(DE.length==0){throw new StateError('Distribution algorithm requires at least one shadow' ' root and can only be run once.');}var j=DE;var g=j.removeLast();var v=g;var p=new List.from(nodes);var l=[] ;var KB=[] ;while (true){p=HE(g,p);var h=g.query('shadow');if(h!=null){if(j.length>0){g=j.removeLast();l.add(h);KB.add(g);}else{WB(h,p);break;}}else{break;}}for(int i=0;i<l.length;i++ ){var h=l[i];var g=KB[i];WB(h,g.nodes);}nodes.clear();nodes.addAll(v.nodes);for(var LB in EE.keys){if(EE[LB]==v){EE[LB]=this;break;}}} HE( v, j){for(var g in v.queryAll('content')){if(!NC(g))continue;var i=g.attributes['select'];if(i==null||i=='')i='*';var h=[] ;var p=[] ;for(var l in j){(MC(l,i)?h:p).add(l);}if(h.length==0){h=g.nodes;}WB(g,h);j=p;}return j;}static  MC( h, g){if(h is !k.Element)return g=='*';return (h as k.Element).matches(g);}static  VB( g)=>g.tagName=='CONTENT'||g.tagName=='SHADOW';static  NC( g){assert(VB(g));for(g=g.parent;g!=null;g=g.parent){if(VB(g))return false;}return true;}static  WB( g, h){assert(VB(g));g.parent.insertAllBefore(h,g);g.remove();} get nodes=>host.nodes; replaceWith( g){host.replaceWith(g);} remove()=>host.remove();set text( g){host.text=g;} contains( g)=>host.contains(g); insertBefore( g, h)=>host.insertBefore(g,h); insertAllBefore( g, h)=>host.insertAllBefore(g,h); get attributes=>host.attributes; get children=>host.children; clone( g)=>host.clone(g); get parent=>host.parent; get parentNode=>host.parentNode; get nodeValue=>host.nodeValue; get id=>host.id;set id( g){host.id=g;} set innerHtml( g){host.innerHtml=g;} get tagName=>host.tagName; matches( g)=>host.matches(g); query( g)=>host.query(g); queryAll( g)=>host.queryAll(g); get SC=>host.SC; get TC=>host.TC; get WC=>host.WC; UC( g)=>host.UC(g); VC( g)=>host.VC(g); ZC( g)=>host.ZC(g); aC( g)=>host.aC(g); eC( h, g)=>host.eC(h,g);get QC=>host.QC; get RC=>host.RC; get localName=>host.localName; get XC=>host.XC; get YC=>host.YC; PC( i, g,[ h]){host.PC(i,g,h);} bC( g)=>host.bC(g); cC( i, g,[ h]){host.cC(i,g,h);} dC( g, h)=>host.dC(g,h);get xtag=>host.xtag;set xtag(g){host.xtag=g;} append( g)=>host.append(g); get onChange=>host.onChange; get onInput=>host.onInput;}class XB{final  IE;XB(this.IE); operator[]( g)=>IE[g];}var OC=false; get jB=>OC&&k.ShadowRoot.supported;//@ sourceMappingURL=convertThis.html_bootstrap.dart.map
