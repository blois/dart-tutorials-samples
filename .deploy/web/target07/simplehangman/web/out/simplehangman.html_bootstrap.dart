import "dart:async" as SC;import "dart:collection" as kB;import "dart:isolate" as dD;import "dart:html" as FB;class JD{static const  KD="Chrome";static const  LD="Firefox";static const  MD="Internet Explorer";static const  ND="Safari";final  GD;final  minimumVersion;const JD(this.GD,[this.minimumVersion]);}class OD{final  name;const OD(this.name);}var AC='pumpernickel';var lB=AC.split("");var mB=DC(AC.replaceAll(new RegExp('.'),'-').split(""));var dB=DC(new List());final GB=new q();var nB=''; get TB{if(o){t(GB,k.m,'guessedletter');}return nB;}set TB( g){if(DB(GB)){l(GB,k.m,'guessedletter',nB,g);}nB=g;}var oB=false; get BC{if(o){t(GB,k.m,'dead');}return oB;}set BC( g){if(DB(GB)){l(GB,k.m,'dead',oB,g);}oB=g;}var pB=false; get CC{if(o){t(GB,k.m,'won');}return pB;}set CC( g){if(DB(GB)){l(GB,k.m,'won',pB,g);}pB=g;} TC(){} UC(){const  g=7;if(lB.contains(TB)){VC();if(!mB.contains('-')){CC=true;}}else{dB.add(TB);if(dB.length==g){BC=true;}}TB='';} VC(){for(int g=0;g<lB.length;g++ ){if(lB[g]==TB){mB[g]=TB;}}} WC(){var kD=FB.document.body;final lD=new FB.InputElement(),mD=new FB.Element.html('<p>\n              <template></template>\n            </p>'),nD=new FB.Element.html('<p id="wrong">\n              <template></template>\n            </p>');var oD,pD,qD,rD;var sD=new GC(kD);oD=kD.nodes[3].nodes[1];sD.loop(oD,()=>mB,(h,g,sD){var n=h[g];var tD=sD.NC(()=>n,false);sD.addAll([new FB.Text(' '),tD,new FB.Text(' ')]);});qD=kD.nodes[5].nodes[1];sD.iB(qD,()=>!BC&&!CC,(sD){var uD,vD,wD,xD,yD;uD=lD.clone(true);sD.listen(uD.onInput,(i){TB=uD.value;});sD.listen(uD.onKeyUp,(i){i=new FB.KeyEvent(i);UC();});sD.ID(()=>TB,(j){if(uD.value!=j)uD.value=j;},false,false);wD=mD.clone(true);vD=wD.nodes[1];sD.iB(vD,()=>dB.length!=0,(sD){sD.add(new FB.Text(' Sorry! The word contains no: '));});yD=nD.clone(true);xD=yD.nodes[1];sD.loop(xD,()=>dB,(h,g,sD){var w=h[g];var zD=sD.NC(()=>w,false);sD.addAll([new FB.Text(' '),zD,new FB.Text(' ')]);});sD.addAll([new FB.Text('\n            Guess a letter...\n            '),uD,new FB.Text('\n            '),wD,new FB.Text('\n            '),yD,new FB.Text('\n          ')]);});rD=kD.nodes[5].nodes[3];sD.iB(rD,()=>BC,(sD){sD.add(new FB.Text(' You\'re dead! '));});pD=kD.nodes[5].nodes[5];sD.iB(pD,()=>CC,(sD){sD.add(new FB.Text(' You Win! '));});sD.bB();sD.insert();}main(){IC=true;TC();WC();}class PD<JB> extends rC with q implements List<JB>{final  AE;PD([ g]):AE=g!=null?new List<JB>(g):<JB>[] ;factory PD.eD( g)=>new PD<JB>()..addAll(g); get length{if(o)t(this,k.m,'length');return AE.length;}set length( h){var i=AE.length;if(i==h)return;if(DB(this)){if(h<i){for(int g=i-1;g>=h;g-- ){l(this,k.LB,g,AE[g],null);}l(this,k.m,'length',i,h);}else{l(this,k.m,'length',i,h);for(int g=i;g<h;g++ ){l(this,k.KB,g,null,null);}}}AE.length=h;} operator[]( g){if(o)t(this,k.CB,g);return AE[g];}operator[]=( g, h){var i=AE[g];if(DB(this)){l(this,k.CB,g,i,h);}AE[g]=h;} add( h){var g=AE.length;if(DB(this)){l(this,k.m,'length',g,g+1);l(this,k.KB,g,null,h);}AE.add(h);} toString(){if(o){for(int g=0;g<length;g++ ){t(this,k.CB,g);}}return AE.toString();}}typedef  UB<s,p>();class PB<s,p> extends q implements Map<s,p>{final  BE;var CE;var DE;PB({ createMap}):BE=createMap!=null?createMap():new Map<s,p>(){CE=new XC<s,p>(this);DE=new YC<s,p>(this);}factory PB.fD( i,{ createMap}){var g=new PB<s,p>(createMap:createMap);i.forEach(( h, j){g[h]=j;});return g;} get keys=>CE; get values=>DE; get length{if(o)t(this,k.m,'length');return BE.length;} get isEmpty=>length==0; get isNotEmpty=>length!=0; EE( g)=>t(this,k.CB,g); FE(){t(this,k.m,'length');BE.keys.forEach(EE);} containsKey( g){if(o)EE(g);return BE.containsKey(g);} operator[]( g){if(o)EE(g);return BE[g];} operator[]=( h, g){var j=BE.length;var i=BE[h];BE[h]=g;if(DB(this)){if(j!=BE.length){l(this,k.m,'length',j,BE.length);l(this,k.KB,h,i,g);}else if(i!=g){l(this,k.CB,h,i,g);}}} putIfAbsent( g, j()){if(o)EE(g);var h=BE.length;var i=BE.putIfAbsent(g,j);if(DB(this)&&h!=BE.length){l(this,k.m,'length',h,BE.length);l(this,k.KB,g,null,i);}return i;} remove( g){if(o)EE(g);var h=BE.length;var i=BE.remove(g);if(DB(this)&&h!=BE.length){l(this,k.LB,g,i,null);l(this,k.m,'length',h,BE.length);}return i;} clear(){var g=BE.length;if(DB(this)&&g>0){BE.forEach((i,h){l(this,k.LB,i,h,null);});l(this,k.m,'length',g,0);}BE.clear();} forEach( g( key, value)){if(o)FE();BE.forEach(g);} toString()=>kB.Maps.mapToString(this);}class XC<s,p> extends kB.IterableBase<s>{final  BE;XC(this.BE); get iterator=>new QD<s,p>(BE);}class QD<s,p> implements Iterator<s>{final  BE;final  CE;var GE=false;QD( g):BE=g,CE=g.BE.keys.iterator; moveNext(){if(o)t(BE,k.m,'length');return GE=CE.moveNext();} get current{var g=CE.current;if(o&&GE)BE.EE(g);return g;}}class YC<s,p> extends kB.IterableBase<p>{final  BE;YC(this.BE); get iterator=>new RD<s,p>(BE);}class RD<s,p> implements Iterator<p>{final  BE;final  CE;final  DE;var GE;RD( g):BE=g,CE=g.BE.keys.iterator,DE=g.BE.values.iterator; moveNext(){if(o)t(BE,k.m,'length');var h=CE.moveNext();var g=DE.moveNext();if(h!=g){throw new StateError('keys and values should be the same length');}return GE=g;} get current{if(o&&GE)BE.EE(CE.current);return DE.current;}}typedef  HB( e);typedef  ZC( changes);typedef  IB();typedef  aC();class eB{final oldValue;final newValue;final  changes;eB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is eB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>nC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class k{static const m=1;static const CB=2;static const KB=CB|4;static const LB=CB|8;final  type;final key;final oldValue;final newValue;k(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is k&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>oC(type,key,oldValue,newValue); toString(){var g;switch (type){case m:g='field';break;case CB:g='index';break;case KB:g='insert';break;case LB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} bC(g, i,[ n]){if(g is q){var h=g;return qB(h,(w){i(new eB(h,h,w));});}var j=new fB(g,i,n);if(!j.HE()){return dC;}return j.IE;} qB( g, i){if(g.SB==null)g.SB=new rB();var h=g.SB.add(i);return h.remove;}DC(g){if(g is Map){var h=null;if(g is kB.SplayTreeMap){h=()=>new kB.SplayTreeMap();}else if(g is kB.LinkedHashMap){h=()=>new kB.LinkedHashMap();}return new PB.fD(g,createMap:h);}if(g is Set)return new FC.gD(g);if(g is Iterable)return new PD.eD(g);return g;}class q{var SB;var RB;final  hashCode= ++q.cC;static var cC=0;} DB( g)=>g.SB!=null&&g.SB.head!=null; get o=>QB!=null; t( g, h,i)=>QB.JE(g,h,i); l( g, j,n, h, i){if((j&(k.KB|k.LB))==0){if(h==i)return;}if(MB==null){MB=[] ;pC(eC);}if(g.RB==null){g.RB=[] ;MB.add(g);}g.RB.add(new k(j,n,h,i));} dC(){}var QB;var EC=100;var MB;var NB; eC(){var w=0;while (MB!=null||NB!=null){var j=MB;MB=null;var i=NB;NB=null;if(w++ ==EC){fC(j,i);return;}if(j!=null){for(var h in j){var cB=h.RB;h.RB=null;for(var g=h.SB.head;g!=null;g=g.next){var n=g.value;try {n(cB);}catch (zB,OB){VB(zB,OB,n,'from ${h}');}}}}if(i!=null){i.forEach((cD,yB){yB.KE();});}}} fC( n, j){var g=[] ;if(n!=null){for(var i in n){var cB=i.RB;g.add('${i} ${cB}');}}if(j!=null){for(var w in j.values){var h=w.KE();if(h!=null)g.add('${w} ${h}');}}MB=null;NB=null;var OB='exceeded notifiction limit of ${EC}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';iC(OB);}class fB{static var gC=0;final  LE= ++fB.gC;final  ME;final  NE;final  OE;final  PE=new Map();final  QE=[] ;var RE=false;var SE;fB(this.ME,this.NE,this.OE); toString()=>OE!=null?'<observer ${LE}: ${OE}>':'<observer ${LE}>'; HE(){var h=QB;QB=this;try {SE=ME();if(SE is Iterable&&SE is !List&&SE is !q){SE=(SE as Iterable).toList();}}catch (g,i){VB(g,i,ME,'from ${this}');SE=null;}PE.forEach(TE);PE.clear();assert(QB==this);QB=h;UE();return QE.length>0;} VE( i){try {NE(i);}catch (g,h){VB(g,h,NE,'from ${this}');}} UE(){var g=SE;if(g is !q)return;QE.add(qB(g,(h){VE(new eB(g,g,h));}));} JE( w, OB,g){var i=PE.putIfAbsent(w,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|OB;}catch (j,n){VB(j,n,g,'hashCode or operator == from ${this}');}} TE( i, j){QE.add(qB(i,(n){if(RE)return;for(var g in n){var h=j[g.key];if(h!=null&&(h&g.type)!=0){RE=true;if(NB==null){NB=new kB.SplayTreeMap();}NB[LE]=this;return;}}}));} IE(){for(var g in QE){g();}RE=false;} KE(){if(!RE)return null;var g=SE;IE();HE();try {if(g==SE)return null;}catch (i,j){VB(i,j,g,'operator == from ${this}');return null;}var h=new eB(g,SE);VE(h);return h;}}typedef  hC( message);var iC=(g)=>print(g);typedef  jC(error,stackTrace,obj, message);var VB=kC; kC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class FC<EB> extends qC with q implements Set<EB>{final  WE;final  XE;FC({ createMap}):WE=createMap!=null?createMap():new Map<EB,Object>(),XE=createMap;factory FC.gD( g,{ createMap}){return new FC<EB>(createMap:createMap)..addAll(g);} contains( g){if(o)t(this,k.CB,g);return WE.containsKey(g);} add( g){var h=WE.length;WE[g]=const Object();if(h!=WE.length){l(this,k.m,'length',h,WE.length);l(this,k.KB,g,null,g);}} remove( g){if(o)t(this,k.CB,g);var h=WE.length;WE.remove(g);if(h!=WE.length){if(DB(this)){l(this,k.LB,g,g,null);l(this,k.m,'length',h,WE.length);}return true;}return false;} clear(){if(DB(this)){for(var g in WE.keys){l(this,k.LB,g,g,null);}l(this,k.m,'length',WE.length,0);}WE.clear();} get length{if(o)t(this,k.m,'length');return WE.length;} get isEmpty=>length==0; get iterator=>new SD<EB>(this); addAll( g)=>g.forEach(add); toString(){if(o){for(EB g in WE.keys){t(this,k.CB,g);}}return WE.keys.toSet().toString();}}class SD<EB> implements Iterator<EB>{final  YE;final  ZE;var aE=false;SD( g):YE=g,ZE=g.WE.keys.iterator; moveNext(){YE.length;return aE=ZE.moveNext();} get current{var g=ZE.current;if(o&&aE)t(YE,k.CB,g);return g;}}class lC{lC();}class mC{mC();}class AB<BB>{var bE;var cE;var dE;var eE;AB.hD( g,this.dE):eE=g{if(dE!=null)dE.fE++ ;} get next=>cE; get value=>eE;set value( g)=>eE=g; gE( g, h){cE=h;bE=g;if(g!=null)g.cE=this;if(h!=null)h.bE=this;return this;} append( g)=>new AB<BB>.hD(g,dE).gE(this,cE); remove(){if(dE==null)return;dE.fE-- ;if(bE!=null){bE.cE=cE;}else{dE.hE=cE;}if(cE!=null){cE.bE=bE;}else{dE.iE=bE;}cE=null;bE=null;dE=null;}}class rB<BB> extends kB.IterableBase<BB>{var hE;var iE; get length=>fE;var fE=0;rB(){} get head=>hE; add( h){var g=new AB<BB>.hD(h,this);if(iE==null)return hE=iE=g;return iE=g.gE(iE,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new TD<BB>(this);}class TD<BB> implements Iterator<BB>{var jE;var dE;var kE;var lE=-1;TD(this.dE){jE=new List<AB>(dE.length);var h=0;var g=dE.head;while (g!=null){jE[h++ ]=g;g=g.next;}} get current=>kE; moveNext(){do{lE++ ;}while(lE<jE.length&&jE[lE].dE!=dE);if(lE<jE.length){kE=jE[lE].value;return true;}else{kE=null;return false;}}}WB(h,g)=>h.hashCode*31+g.hashCode;nC(h,g,i)=>WB(WB(h,g),i);oC(g,i,h,j)=>WB(WB(g,i),WB(h,j)); pC( h()){var g=new dD.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);}abstract class qC extends kB.IterableBase<dynamic>{}abstract class rC extends kB.ListMixin<dynamic>{} sC(i, g,[ h]){var j=i is lC;if(h==null){h=i.toString();}if(!j&&g is FB.Text){g.text=h;}else{var n=g;g=j?new FB.Element.html(h):new FB.Text(h);n.replaceWith(g);}return g;} tC(g){if(g is mC)return g.toString();g=g.toString();return vC(g)?g:'#';}const uC=const["http","https","ftp","mailto"]; vC( h){var g=Uri.parse(h).scheme;if(g=='')return true;return uC.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class XB{ bB(){} insert(); remove();}class UD extends XB{final  OC;var mE;final  listener;UD(this.OC,this.listener); insert(){mE=OC.listen(listener);} remove(){mE.cancel();mE=null;}}class VD extends XB{final exp;final  action;final  isFinal;var u;VD(this.exp,this.action,this.isFinal); insert(){if(isFinal){action(new eB(null,exp()));}else if(u!=null){throw new StateError('binding already attached');}else{u=gB(exp,action,'generic-binding');}} remove(){if(!isFinal){u();u=null;}}}class WD extends XB{final  RC;final  wB;final  PC;final  isFinal;var u;WD(this.wB,this.RC,this.PC,this.isFinal); nE(g){RC(PC?tC(g):g);} insert(){if(isFinal){nE(wB());}else if(u!=null){throw new StateError('data binding already attached.');}else{u=gB(wB,(g)=>nE(g.newValue),'dom-property-binding');}} remove(){if(!isFinal){u();u=null;}}}class GC extends XB{final  xB;final  children=[] ;final  nodes=[] ;GC(this.xB); listen( i, h){children.add(new UD(i,(g){h(g);BD();}));} NC( h,i){var g=new FB.Text('');children.add(new VD(()=>'${h()}',(j){g=sC(h(),g,j.newValue);},i));return g;} ID(g,j,h,[i=false]){children.add(new WD(g,j,i,h));} iB( h,g,i){children.add(new xC(h,g,i));} loop( h,g,i){children.add(new XD(h,g,i));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); bB(){for(var g=0,h=children.length;g<h;g++ ){children[g].bB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}abstract class HC extends GC{final exp;var u;HC( g,this.exp):super(g); bB(){} insert(){super.bB();if(nodes.length>0){var i=xB.parentNode;var j=xB.nextNode;for(var g=0,h=nodes.length;g<h;g++ ){i.insertBefore(nodes[g],j);}}super.insert();} remove(){super.remove();for(var g=nodes.length-1;g>=0;g-- ){nodes[g].remove();}nodes.clear();}}typedef  wC( template);class xC extends HC{var jB=false;final  MC;xC( h,g,this.MC):super(h,g); insert(){u=gB(exp,(g){if(!jB&&g.newValue){MC(this);super.insert();jB=true;}else if(jB&&!g.newValue){super.remove();jB=false;}},'conditional-binding');} remove(){super.remove();u();u=null;}}typedef  yC( list, index, template);class XD extends HC{final  QC;XD( h,g,this.QC):super(h,g); insert(){u=gB(exp,(i){super.remove();var h=i.newValue;for(int g=0;g<h.length;g++ ){QC(h,g,this);}super.insert();},'loop-binding');} remove(){super.remove();u();u=null;}}var IC=false; zC(g, w,[ n]){if(IC)return bC(g,w);if(w==null)return (){};if(YB==null)YB=new rB<ZB>();var i;var h=v.FD;if(g is LC){i=(g as LC).oE;}else if(g is Function){i=g;try {var j=g();if(j is List){h=v.aB;}else if(j is Iterable){h=v.aB;i=()=>g().toList();}else if((j is kB.LinkedHashMap)||(j is kB.SplayTreeMap)){h=v.uB;}else if(j is Map){h=v.tB;}}catch (cB,yB){print('error: evaluating ${n!=null?n:"<unnamed>"} ' 'watcher threw error (${cB}, ${yB})');}}else if(g is List){i=()=>g;h=v.aB;}else if(g is Iterable){i=()=>g.toList();h=v.aB;}else if((g is kB.LinkedHashMap)||(g is kB.SplayTreeMap)){i=()=>g;h=v.uB;}else if(g is Map){i=()=>g;h=v.tB;}var OB=AD(h,i,w,n);var zB=YB.add(OB);return zB.remove;} AD( j, g, i, h){switch (j){case v.aB:return new YD(g,i,h);case v.uB:return new aD(g,i,h);case v.tB:return new ZD(g,i,h);default:return new ZB(g,i,h);}} gB(h,i,[j]){var n=zC(h,i,j);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new eB(null,g));return n;}var YB;class ZB{final  vB;final  oE;final  pE;var qE;ZB(this.oE,this.pE,this.vB){qE=oE();} toString()=>vB==null?'<unnamed>':vB; HD(){var g=rE();if(sE(g)){var h=qE;tE(g);pE(new eB(h,g));return true;}return false;} sE(g)=>qE!=g; tE(g){qE=g;}rE(){try {return oE();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return qE;}}final  JC=10; BD(){if(YB==null)return;var g;var h=0;do{g=false;for(var i in YB){if(i.HD()){g=true;}}}while(g&& ++h<JC);if(h==JC){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  KC<CD>();typedef  DD<CD>( value);class LC<CD>{LC();}class YD<CD> extends ZB{YD(g, i, h):super(g,i,h){tE(rE());} sE( g){return sB(qE,g);} tE(g){qE=new List<CD>.from(g);}}class ZD<hB,ED> extends ZB{ZD(g, i, h):super(g,i,h){tE(rE());} sE( g){var i=qE.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(qE[h]!=g[h])return true;}return false;} tE(g){qE=new Map<hB,ED>.from(g);}}class aD<hB,ED> extends ZB{aD(g, i, h):super(g,i,h){tE(rE());} sE( g){return sB(g.keys,qE.keys)||sB(g.values,qE.values);} tE(g){qE=new kB.LinkedHashMap.from(g);}} sB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class v{final uE;const v.iD(this.uE);toString()=>'Enum.${uE}';static const aB=const v.iD('LIST');static const tB=const v.iD('HASH_MAP');static const uB=const v.iD('ORDERED_MAP');static const FD=const v.iD('OTHER');}//@ sourceMappingURL=simplehangman.html_bootstrap.dart.map
