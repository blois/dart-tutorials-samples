import "dart:async" as JC;import "dart:collection" as xB;import "dart:html" as v;import "dart:isolate" as KD;class wC{static const  xC="Chrome";final  tC;final  minimumVersion;const wC(this.tC,[this.minimumVersion]);}class yC{final  name;const yC(this.name);}final l=new n();var ZB=''; get aB{if(FB){GB(l,m.p,'sillyword');}return ZB;}set aB( g){if(EB(l)){HB(l,m.p,'sillyword',ZB,g);}ZB=g;}var bB=''; get cB{if(FB){GB(l,m.p,'adjective');}return bB;}set cB( g){if(EB(l)){HB(l,m.p,'adjective',bB,g);}bB=g;}var dB=''; get eB{if(FB){GB(l,m.p,'animal');}return dB;}set eB( g){if(EB(l)){HB(l,m.p,'animal',dB,g);}dB=g;}var fB=''; get gB{if(FB){GB(l,m.p,'bodypart');}return fB;}set gB( g){if(EB(l)){HB(l,m.p,'bodypart',fB,g);}fB=g;}var hB=''; get iB{if(FB){GB(l,m.p,'verb');}return hB;}set iB( g){if(EB(l)){HB(l,m.p,'verb',hB,g);}hB=g;}var jB=''; get kB{if(FB){GB(l,m.p,'adverb');}return jB;}set kB( g){if(EB(l)){HB(l,m.p,'adverb',jB,g);}jB=g;} KC(){}bool LC(){if(aB!=''&&cB!=''&&eB!=''&&gB!=''&&iB!=''&&kB!=''){return true;}else{return false;}} MC(){var OD=v.document.body;final PD=new v.ParagraphElement(),QD=new v.ParagraphElement(),RD=new v.ParagraphElement();var SD,TD,UD,VD,WD,XD,YD;var ZD=new iC(OD);SD=OD.nodes[3];ZD.listen(SD.onInput,(h){aB=SD.value;});ZD.MB(()=>aB,(g){if(SD.value!=g)SD.value=g;},false,false);TD=OD.nodes[5];ZD.listen(TD.onInput,(h){cB=TD.value;});ZD.MB(()=>cB,(g){if(TD.value!=g)TD.value=g;},false,false);VD=OD.nodes[7];ZD.listen(VD.onInput,(h){eB=VD.value;});ZD.MB(()=>eB,(g){if(VD.value!=g)VD.value=g;},false,false);WD=OD.nodes[9];ZD.listen(WD.onInput,(h){gB=WD.value;});ZD.MB(()=>gB,(g){if(WD.value!=g)WD.value=g;},false,false);XD=OD.nodes[11];ZD.listen(XD.onInput,(h){iB=XD.value;});ZD.MB(()=>iB,(g){if(XD.value!=g)XD.value=g;},false,false);YD=OD.nodes[13];ZD.listen(YD.onInput,(h){kB=YD.value;});ZD.MB(()=>kB,(g){if(YD.value!=g)YD.value=g;},false,false);UD=OD.nodes[15];ZD.vC(UD,()=>LC(),(ZD){var aD,bD,cD;cD=PD.clone(true);var dD=ZD.LB(()=>aB,false);cD.nodes.addAll([new v.Text('Dear Ms. '),dD,new v.Text(',')]);aD=QD.clone(true);var eD=ZD.LB(()=>cB,false);var fD=ZD.LB(()=>eB,false);var gD=ZD.LB(()=>gB,false);var hD=ZD.LB(()=>iB,false);aD.nodes.addAll([new v.Text('Little '),eD,new v.Text(' Billy missed school\n        because he was sick with wild-'),fD,new v.Text(' flu.\n        His '),gD,new v.Text(' swelled up and fell off.\n        He can no longer '),hD,new v.Text('.')]);bD=RD.clone(true);var iD=ZD.LB(()=>kB,false);bD.nodes.addAll([new v.Text('Most '),iD,new v.Text(' yours, Billy\'s mother')]);ZD.addAll([new v.Text('\n        '),cD,new v.Text('\n        \n        '),aD,new v.Text('\n        \n        '),bD,new v.Text('\n      ')]);});ZD.TB();ZD.insert();}main(){BC=true;KC();MC();}const zC=const AD();typedef  w( e);typedef  NC( changes);typedef  AB();typedef  OC();class VB{final oldValue;final newValue;final  changes;VB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is VB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>bC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class m{static const p=1;static const lB=2;static const yB=lB|4;static const zB=lB|8;final  type;final key;final oldValue;final newValue;m(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is m&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>cC(type,key,oldValue,newValue); toString(){var g;switch (type){case p:g='field';break;case lB:g='index';break;case yB:g='insert';break;case zB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} PC(g, i,[ k]){if(g is n){var h=g;return mB(h,(u){i(new VB(h,h,u));});}var j=new WB(g,i,k);if(!j.jD()){return RC;}return j.kD;} mB( g, i){if(g.KB==null)g.KB=new nB();var h=g.KB.add(i);return h.remove;}class n{var KB;var JB;final  hashCode= ++n.QC;static var QC=0;} EB( g)=>g.KB!=null&&g.KB.head!=null; get FB=>IB!=null; GB( g, h,i)=>IB.lD(g,h,i); HB( g, j,k, h, i){if((j&(m.yB|m.zB))==0){if(h==i)return;}if(BB==null){BB=[] ;dC(SC);}if(g.JB==null){g.JB=[] ;BB.add(g);}g.JB.add(new m(j,k,h,i));} RC(){}var IB;var AC=100;var BB;var CB; SC(){var u=0;while (BB!=null||CB!=null){var j=BB;BB=null;var i=CB;CB=null;if(u++ ==AC){TC(j,i);return;}if(j!=null){for(var h in j){var UB=h.JB;h.JB=null;for(var g=h.KB.head;g!=null;g=g.next){var k=g.value;try {k(UB);}catch (wB,DB){NB(wB,DB,k,'from ${h}');}}}}if(i!=null){i.forEach((JD,vB){vB.mD();});}}} TC( k, j){var g=[] ;if(k!=null){for(var i in k){var UB=i.JB;g.add('${i} ${UB}');}}if(j!=null){for(var u in j.values){var h=u.mD();if(h!=null)g.add('${u} ${h}');}}BB=null;CB=null;var DB='exceeded notifiction limit of ${AC}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';WC(DB);}class WB{static var UC=0;final  nD= ++WB.UC;final  oD;final  pD;final  qD;final  rD=new Map();final  sD=[] ;var tD=false;var uD;WB(this.oD,this.pD,this.qD); toString()=>qD!=null?'<observer ${nD}: ${qD}>':'<observer ${nD}>'; jD(){var h=IB;IB=this;try {uD=oD();if(uD is Iterable&&uD is !List&&uD is !n){uD=(uD as Iterable).toList();}}catch (g,i){NB(g,i,oD,'from ${this}');uD=null;}rD.forEach(vD);rD.clear();assert(IB==this);IB=h;wD();return sD.length>0;} xD( i){try {pD(i);}catch (g,h){NB(g,h,pD,'from ${this}');}} wD(){var g=uD;if(g is !n)return;sD.add(mB(g,(h){xD(new VB(g,g,h));}));} lD( u, DB,g){var i=rD.putIfAbsent(u,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|DB;}catch (j,k){NB(j,k,g,'hashCode or operator == from ${this}');}} vD( i, j){sD.add(mB(i,(k){if(tD)return;for(var g in k){var h=j[g.key];if(h!=null&&(h&g.type)!=0){tD=true;if(CB==null){CB=new xB.SplayTreeMap();}CB[nD]=this;return;}}}));} kD(){for(var g in sD){g();}tD=false;} mD(){if(!tD)return null;var g=uD;kD();jD();try {if(g==uD)return null;}catch (i,j){NB(i,j,g,'operator == from ${this}');return null;}var h=new VB(g,uD);xD(h);return h;}}typedef  VC( message);var WC=(g)=>print(g);typedef  XC(error,stackTrace,obj, message);var NB=YC; YC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class AD{const AD();}class ZC{ZC();}class aC{aC();}class q<s>{var yD;var zD;var AE;var BE;q.LD( g,this.AE):BE=g{if(AE!=null)AE.CE++ ;} get next=>zD; get value=>BE;set value( g)=>BE=g; DE( g, h){zD=h;yD=g;if(g!=null)g.zD=this;if(h!=null)h.yD=this;return this;} append( g)=>new q<s>.LD(g,AE).DE(this,zD); remove(){if(AE==null)return;AE.CE-- ;if(yD!=null){yD.zD=zD;}else{AE.EE=zD;}if(zD!=null){zD.yD=yD;}else{AE.FE=yD;}zD=null;yD=null;AE=null;}}class nB<s> extends xB.IterableBase<s>{var EE;var FE; get length=>CE;var CE=0;nB(){} get head=>EE; add( h){var g=new q<s>.LD(h,this);if(FE==null)return EE=FE=g;return FE=g.DE(FE,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new BD<s>(this);}class BD<s> implements Iterator<s>{var GE;var AE;var HE;var IE=-1;BD(this.AE){GE=new List<q>(AE.length);var h=0;var g=AE.head;while (g!=null){GE[h++ ]=g;g=g.next;}} get current=>HE; moveNext(){do{IE++ ;}while(IE<GE.length&&GE[IE].AE!=AE);if(IE<GE.length){HE=GE[IE].value;return true;}else{HE=null;return false;}}}OB(h,g)=>h.hashCode*31+g.hashCode;bC(h,g,i)=>OB(OB(h,g),i);cC(g,i,h,j)=>OB(OB(g,i),OB(h,j)); dC( h()){var g=new KD.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);} eC(i, g,[ h]){var j=i is ZC;if(h==null){h=i.toString();}if(!j&&g is v.Text){g.text=h;}else{var k=g;g=j?new v.Element.html(h):new v.Text(h);k.replaceWith(g);}return g;} fC(g){if(g is aC)return g.toString();g=g.toString();return hC(g)?g:'#';}const gC=const["http","https","ftp","mailto"]; hC( h){var g=Uri.parse(h).scheme;if(g=='')return true;return gC.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class PB{ TB(){} insert(); remove();}class CD extends PB{final  GC;var JE;final  listener;CD(this.GC,this.listener); insert(){JE=GC.listen(listener);} remove(){JE.cancel();JE=null;}}class DD extends PB{final exp;final  action;final  isFinal;var t;DD(this.exp,this.action,this.isFinal); insert(){if(isFinal){action(new VB(null,exp()));}else if(t!=null){throw new StateError('binding already attached');}else{t=oB(exp,action,'generic-binding');}} remove(){if(!isFinal){t();t=null;}}}class ED extends PB{final  IC;final  tB;final  HC;final  isFinal;var t;ED(this.tB,this.IC,this.HC,this.isFinal); KE(g){IC(HC?fC(g):g);} insert(){if(isFinal){KE(tB());}else if(t!=null){throw new StateError('data binding already attached.');}else{t=oB(tB,(g)=>KE(g.newValue),'dom-property-binding');}} remove(){if(!isFinal){t();t=null;}}}class iC extends PB{final  uB;final  children=[] ;final  nodes=[] ;iC(this.uB); listen( i, h){children.add(new CD(i,(g){h(g);oC();}));} LB( h,i){var g=new v.Text('');children.add(new DD(()=>'${h()}',(j){g=eC(h(),g,j.newValue);},i));return g;} MB(g,j,h,[i=false]){children.add(new ED(g,j,i,h));} vC( h,g,i){children.add(new lC(h,g,i));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); TB(){for(var g=0,h=children.length;g<h;g++ ){children[g].TB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}abstract class jC extends iC{final exp;var t;jC( g,this.exp):super(g); TB(){} insert(){super.TB();if(nodes.length>0){var i=uB.parentNode;var j=uB.nextNode;for(var g=0,h=nodes.length;g<h;g++ ){i.insertBefore(nodes[g],j);}}super.insert();} remove(){super.remove();for(var g=nodes.length-1;g>=0;g-- ){nodes[g].remove();}nodes.clear();}}typedef  kC( template);class lC extends jC{var YB=false;final  FC;lC( h,g,this.FC):super(h,g); insert(){t=oB(exp,(g){if(!YB&&g.newValue){FC(this);super.insert();YB=true;}else if(YB&&!g.newValue){super.remove();YB=false;}},'conditional-binding');} remove(){super.remove();t();t=null;}}var BC=false; mC(g, u,[ k]){if(BC)return PC(g,u);if(u==null)return (){};if(QB==null)QB=new nB<RB>();var i;var h=o.sC;if(g is EC){i=(g as EC).LE;}else if(g is Function){i=g;try {var j=g();if(j is List){h=o.SB;}else if(j is Iterable){h=o.SB;i=()=>g().toList();}else if((j is xB.LinkedHashMap)||(j is xB.SplayTreeMap)){h=o.rB;}else if(j is Map){h=o.qB;}}catch (UB,vB){print('error: evaluating ${k!=null?k:"<unnamed>"} ' 'watcher threw error (${UB}, ${vB})');}}else if(g is List){i=()=>g;h=o.SB;}else if(g is Iterable){i=()=>g.toList();h=o.SB;}else if((g is xB.LinkedHashMap)||(g is xB.SplayTreeMap)){i=()=>g;h=o.rB;}else if(g is Map){i=()=>g;h=o.qB;}var DB=nC(h,i,u,k);var wB=QB.add(DB);return wB.remove;} nC( j, g, i, h){switch (j){case o.SB:return new FD(g,i,h);case o.rB:return new HD(g,i,h);case o.qB:return new GD(g,i,h);default:return new RB(g,i,h);}} oB(h,i,[j]){var k=mC(h,i,j);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new VB(null,g));return k;}var QB;class RB{final  sB;final  LE;final  ME;var NE;RB(this.LE,this.ME,this.sB){NE=LE();} toString()=>sB==null?'<unnamed>':sB; uC(){var g=OE();if(PE(g)){var h=NE;QE(g);ME(new VB(h,g));return true;}return false;} PE(g)=>NE!=g; QE(g){NE=g;}OE(){try {return LE();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return NE;}}final  CC=10; oC(){if(QB==null)return;var g;var h=0;do{g=false;for(var i in QB){if(i.uC()){g=true;}}}while(g&& ++h<CC);if(h==CC){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  DC<pC>();typedef  qC<pC>( value);class EC<pC>{EC();}class FD<pC> extends RB{FD(g, i, h):super(g,i,h){QE(OE());} PE( g){return pB(NE,g);} QE(g){NE=new List<pC>.from(g);}}class GD<XB,rC> extends RB{GD(g, i, h):super(g,i,h){QE(OE());} PE( g){var i=NE.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(NE[h]!=g[h])return true;}return false;} QE(g){NE=new Map<XB,rC>.from(g);}}class HD<XB,rC> extends RB{HD(g, i, h):super(g,i,h){QE(OE());} PE( g){return pB(g.keys,NE.keys)||pB(g.values,NE.values);} QE(g){NE=new xB.LinkedHashMap.from(g);}} pB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class o{final RE;const o.MD(this.RE);toString()=>'Enum.${RE}';static const SB=const o.MD('LIST');static const qB=const o.MD('HASH_MAP');static const rB=const o.MD('ORDERED_MAP');static const sC=const o.MD('OTHER');}//@ sourceMappingURL=adlibitum.html_bootstrap.dart.map
